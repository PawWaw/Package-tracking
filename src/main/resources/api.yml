swagger: "2.0"
info:
  description: "Complete requests for delivery API"
  version: "1.0.0"
  title: "Delivery Api"
host: "petstore.swagger.io"
basePath: "/v2"
tags:
  - name: "delivery"
    description: "Everything about your package and its delivery"
  - name: "user"
    description: "User data"
schemes:
  - "https"
  - "http"
paths:
  /delivery:
    post:
      tags:
        - "delivery"
      summary: "Add delivery status"
      operationId: "addPet"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Delivery object that needs to be added to the db"
          required: true
          schema:
            $ref: "#/definitions/Delivery"
      responses:
        201:
          description: "Created"
        405:
          description: "Invalid input"
        500:
          description: "Internal error"
    get:
      tags:
        - "delivery"
      summary: "Get all active deliveries"
      operationId: "getAllDeliveries"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      responses:
        200:
          description: "OK"
        204:
          description: "Delivery not found"
        500:
          description: "Internal error"
  /delivery/{id}:
    get:
      tags:
        - "delivery"
      summary: "Finds delivery by its unique id"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          items:
            type: "string"
      responses:
        200:
          description: "OK"
        204:
          description: "Delivery not found"
        500:
          description: "Internal error"
    put:
      tags:
        - "delivery"
      summary: "Update specific delivery"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          items:
            type: "string"
        - name: "body"
          in: "body"
          description: "Updated delivery object"
          required: true
          schema:
            $ref: "#/definitions/Delivery"
      responses:
        200:
          description: "OK"
        204:
          description: "Delivery not found"
        500:
          description: "Internal error"
    delete:
      tags:
        - "delivery"
      summary: "Delete delivery by its unique id"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          items:
            type: "string"
      responses:
        200:
          description: "OK"
        204:
          description: "Delivery not found"
        500:
          description: "Internal error"
  /user:
    post:
      tags:
        - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Created user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: "Created"
        405:
          description: "Invalid input"
        500:
          description: "Internal error"
  /user/{id}:
    get:
      tags:
        - "user"
      summary: "Get user by user id"
      description: ""
      operationId: "getUserById"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
        204:
          description: "User not found"
        500:
          description: "Internal error"
    put:
      tags:
        - "user"
      summary: "Updated user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "name that need to be updated"
          required: true
          type: "string"
        - in: "body"
          name: "body"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: "OK"
        204:
          description: "User not found"
        500:
          description: "Internal error"
    delete:
      tags:
        - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "The name that needs to be deleted"
          required: true
          type: "string"
      responses:
        200:
          description: "OK"
        204:
          description: "Delivery not found"
        500:
          description: "Internal error"
definitions:
  Delivery:
    type: "object"
    properties:
      id:
        type: "string"
      deliveryId:
        type: "string"
      quantity:
        type: "integer"
        format: "int32"
      shipStartDate:
        type: "string"
        format: "date-time"
      shipEndDate:
        type: "string"
        format: "date-time"
      processingStage:
        type: "string"
      status:
        type: "string"
        description: "Order Status"
        enum:
          - "awaiting"
          - "placed"
          - "transported"
          - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Delivery"
  User:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "integer"
        format: "int64"
      userStatus:
        type: "string"
        enum:
          - "active"
          - "deactivated"
          - "locked"
    xml:
      name: "User"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"